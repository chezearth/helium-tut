@Restrict("System Admin", all())
@Restrict("Shop Owner", notEquals(state, STATES.Inland))
@Role("Farmer")
persistent object Farmer {

  // Farmer Details
  @requiredFieldValidator("validator.required_field")
  string firstName;

  @requiredFieldValidator("validator.required_field")
  string lastName;

  @requiredFieldValidator("validator.required_field")
  string mobileNumber;

  @requiredFieldValidator("validator.required_field")
  string emailAddress;

  // Farm details
  @requiredFieldValidator("validator.required_field")
  string farmAddress;

  @requiredFieldValidator("validator.required_field")
  decimal farmSize;

  @requiredFieldValidator("validator.required_field")
  decimal longitude;

  @requiredFieldValidator("validator.required_field")
  decimal latitude;

  @requiredFieldValidator("validator.required_field")
  STATES state;

  // Booleans to indicate farmer can receive SMS or email messaging
  bool smsMessaging;
  bool emailMessaging;

  // When last did this farmer visit any shop
  datetime lastShopVisit;

  // Farmer profile documentation
  uuid governmentAssistanceCertificateId;
  blob governmentAssistanceCertificate;

  // Meta information
  datetime registeredOn;
  datetime updatedOn;
  datetime documentationProfileUpdatedOn;
  bool deleted;


  datetime cropTypeProfileUpdatedOn;
  datetime messagingProfileUpdatedOn;

  // Relationship with crop types
  @ManyToMany
  Stock cropTypes via farmers;

  // Relationship between farmer and shops for which the farmer would like to receive stock level notifications
  @ManyToMany
  Shop messagingShops via notifiedFarmers;

}
