unit FarmerProfile;

Farmer farmer;

bool showFarmerCropTypes;

string cropTypeTableLable;
Stock cropType;


void init() {
  farmer = Farmer:user();
  showFarmerCropTypes = true;
  cropTypeTableLable = "Hide crop types";
}


Stock[] getFarmerCropTypes() {
  return farmer.cropTypes;
}


// View or hide farmer crop type details
string toggleFarmerCropTypesVisibility() {
  if(showFarmerCropTypes == false) {
    showFarmerCropTypes = true;
    cropTypeTableLable = "Hide crop types";
  }
  else {
    showFarmerCropTypes = false;
    cropTypeTableLable = "Show crop types";
  }
  return null;
}


// Return the stock items that rep stock types, and that are not alrewady linked to the farmer
Stock[] getEligibleCropTypes() {
  // `Diff` takes 2 selectors as arguments and returns items that are returned by the 1st, but not the 2nd, selector
  return Stock:diff(
    // Basic equals to oinly consider stock types that rep crop and not fertilizer
    equals(stockType, STOCK_TYPE.crop_seed),

    // Use relationships for all stocks that are linked to the selected farmer so that it can be excluded
    relationshipIn(farmers, farmer)
  );
}


// Link the selected crop types to the farmer
string addCropType() {
  farmer.cropTypes.append(cropType);
  return null;
}


// Unlink the selectd crop types from  the farmer
string removeFarmerCropType() {
  Stock[] farmerCropTypes = farmer.cropTypes;
  // for loop with counter over crop types collection
  for(int i = 0; i < farmerCropTypes.length(); i++) {
    Stock currentFarmerCropType = farmerCropTypes.get(i);
    // Compare item using internal ids to ensure equiv
    if(currentFarmerCropType._id == cropType._id) {
      farmerCropTypes.remove(i);
    }
  }
  cropType = null;
  return null;
}


// Unlink ALL crop types from the farmer
string removeAllFarmerCropTypes() {
  Stock[] farmerCropTypes = farmer.cropTypes;
  // loop reverse to avoid skipping over items as list is reduced
  for(int i = farmerCropTypes.length() - 1; i >= 0; i--) {
    farmerCropTypes.remove(i);
  }
  return null;
}
