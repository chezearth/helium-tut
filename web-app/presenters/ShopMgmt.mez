unit ShopMgmt;

Shop shop;

bool editing;


void init() {
  shop = Shop:new();
  shop.shopCode = generateShopCode();
  editing = false;
}


Shop[] getShops() {
  return Shop:equals(deleted, false);
}


string generateShopCode() {
  string shopId = shop._id;
  string[] idParts = String:split(shopId, "-");
  int randomNumber = Math:random() * 100000;
  return String:concat(idParts.get(0), "-", randomNumber);
}


DSL_VIEWS saveShop() {
  if (editing == true) {
    // When editing we record the current time
    shop.updatedOn = Mez:now();
  }
  else {
    // When saving for the first time we record the current time
    shop.createdOn = Mez:now();
    shop.deleted = false;
    shop.save();
  }

  init();
  return null;
}


DSL_VIEWS viewShop() {
  return DSL_VIEWS.ShopDetails;
}


DSL_VIEWS back() {
  return DSL_VIEWS.ShopMgmt;
}


DSL_VIEWS editShop() {
  editing = true;
  return null;
}


DSL_VIEWS deleteShop() {
  shop.deleted = true;
  init();
  return null;
}
