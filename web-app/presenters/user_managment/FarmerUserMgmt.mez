unit FarmerUserMgmt;

Farmer farmer;

bool editing;

bool showFarmerDetailInTable;
string tableLable;

void init() {
  farmer = Farmer:new();
  editing = false;
  showFarmerDetailInTable = false;
  tableLable = "Fat table";
}


DSL_VIEWS viewUser() {
  return DSL_VIEWS.FarmerDetails;
}


DSL_VIEWS back() {
  return DSL_VIEWS.FarmerUserMgmt;
}


DSL_VIEWS saveUser() {
  farmer.deleted = false;
  farmer.save();
  if (editing == false) {
    farmer.invite(farmer.mobileNumber);
  }

  init();
  return null;
}


DSL_VIEWS editUser() {
  editing = true;
  return null;
}


DSL_VIEWS removeUser() {
  if (farmer == Farmer:user()) {
    Mez:alertError("alert.currently_logged_in");
  } else {
    farmer.deleted = true;
    farmer.removeRole();
  }

  init();
  return null;
}


Farmer[] getFarmers() {
  return Farmer:equals(deleted, false);
}

string toggleShowFarmerDetailsInTable() {
  if(showFarmerDetailInTable == false) {
    showFarmerDetailInTable = true;
    tableLable = "Slim Table";
  }
  else {
    showFarmerDetailInTable = false;
    tableLable = "Fat table";
  }
  return null;
}
